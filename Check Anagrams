class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> result = new ArrayList<>();
        boolean[] visited = new boolean[strs.length];

        for (int i = 0; i < strs.length; i++) {
            if (visited[i]) continue;

            List<String> group = new ArrayList<>();
            group.add(strs[i]); // Add the original word to its group

            for (int j = i + 1; j < strs.length; j++) {
                if (!visited[j] && isAnagram(strs[i], strs[j])) {
                    group.add(strs[j]);
                    visited[j] = true;
                }
            }

            visited[i] = true;
            result.add(group);
        }

        return result;
    }
    public boolean isAnagram(String str1,String str2)
    {
        boolean ans =true;
        if(str1.length()!= str2.length())
        {
            ans = false;
            return ans;
        }
        int arr[] =new int[26];
        for (char c : str1.toCharArray()) arr[c - 'a']++;
        for (char c : str2.toCharArray()) arr[c - 'a']--;
        for(int i =0; i<26;i++)
        {
            if(arr[i]!=0)
            {
                return false;
            }
        }
        return ans;
    }
}
